# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2018-03-17 20:40
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Badge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('assetId', models.IntegerField()),
            ],
            options={
                'db_table': 'badge',
            },
        ),
        migrations.CreateModel(
            name='BestRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('place', models.IntegerField(blank=True, null=True)),
                ('raceMilliseconds', models.IntegerField()),
                ('speed', models.FloatField(default=0)),
            ],
            options={
                'db_table': 'bestrun',
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('rawtext', models.CharField(max_length=500)),
                ('filteredtext', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'chatmessage',
            },
        ),
        migrations.CreateModel(
            name='FailedSecurityAttempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('params', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'db_table': 'failedsecurityattempt',
            },
        ),
        migrations.CreateModel(
            name='Find',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'find',
            },
        ),
        migrations.CreateModel(
            name='GameJoin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('length', models.IntegerField(default=0)),
                ('left', models.DateTimeField(default=datetime.datetime(1970, 1, 1, 0, 0))),
            ],
            options={
                'db_table': 'gamejoin',
            },
        ),
        migrations.CreateModel(
            name='GameServerError',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=100)),
                ('data', models.CharField(max_length=500)),
                ('message', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'gameservererror',
            },
        ),
        migrations.CreateModel(
            name='Power',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'power',
            },
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('distance', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'race',
            },
        ),
        migrations.CreateModel(
            name='RaceEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(default='', max_length=100)),
                ('description', models.CharField(default='', max_length=1000)),
                ('startdate', models.DateTimeField()),
                ('enddate', models.DateTimeField()),
                ('badge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='raceevents', to='terrainapp.Badge')),
                ('race', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='terrainapp.Race')),
            ],
            options={
                'db_table': 'raceevent',
            },
        ),
        migrations.CreateModel(
            name='RequestSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('ip', models.CharField(max_length=100)),
                ('success_count', models.IntegerField(default=0)),
                ('failure_count', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'requestsource',
            },
        ),
        migrations.CreateModel(
            name='RobloxUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('userId', models.IntegerField(unique=True)),
                ('username', models.CharField(max_length=30)),
                ('banLevel', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'robloxuser',
            },
        ),
        migrations.CreateModel(
            name='Run',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('place', models.IntegerField(default=0)),
                ('speed', models.FloatField(default=0)),
                ('raceMilliseconds', models.IntegerField()),
                ('race', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='terrainapp.Race')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='runs', to='terrainapp.RobloxUser')),
            ],
            options={
                'db_table': 'run',
            },
        ),
        migrations.CreateModel(
            name='Sign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('signId', models.IntegerField()),
                ('name', models.CharField(max_length=50)),
                ('x', models.FloatField(blank=True, null=True)),
                ('y', models.FloatField(blank=True, null=True)),
                ('z', models.FloatField(blank=True, null=True)),
                ('calcFinds', models.IntegerField(default=0)),
                ('calcNearest', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='nearest_to', to='terrainapp.Sign')),
            ],
            options={
                'db_table': 'sign',
            },
        ),
        migrations.CreateModel(
            name='TixTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('amount', models.IntegerField()),
                ('reason', models.IntegerField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='joins', to='terrainapp.RobloxUser')),
            ],
            options={
                'db_table': 'tixtransaction',
            },
        ),
        migrations.CreateModel(
            name='UserDied',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('x', models.FloatField(blank=True, null=True)),
                ('y', models.FloatField(blank=True, null=True)),
                ('z', models.FloatField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deaths', to='terrainapp.RobloxUser')),
            ],
            options={
                'db_table': 'userdied',
            },
        ),
        migrations.CreateModel(
            name='UserQuit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('x', models.FloatField(blank=True, null=True)),
                ('y', models.FloatField(blank=True, null=True)),
                ('z', models.FloatField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quits', to='terrainapp.RobloxUser')),
            ],
            options={
                'db_table': 'userquit',
            },
        ),
        migrations.CreateModel(
            name='UserReset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('x', models.FloatField(blank=True, null=True)),
                ('y', models.FloatField(blank=True, null=True)),
                ('z', models.FloatField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resets', to='terrainapp.RobloxUser')),
            ],
            options={
                'db_table': 'userreset',
            },
        ),
        migrations.CreateModel(
            name='UserSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('first', models.BooleanField(default=0)),
                ('count', models.IntegerField(default=0)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usersources', to='terrainapp.RequestSource')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usersources', to='terrainapp.RobloxUser')),
            ],
            options={
                'db_table': 'usersource',
            },
        ),
        migrations.AddField(
            model_name='race',
            name='end',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ends', to='terrainapp.Sign'),
        ),
        migrations.AddField(
            model_name='race',
            name='start',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='starts', to='terrainapp.Sign'),
        ),
        migrations.AddField(
            model_name='gameservererror',
            name='requestsource',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gameservererrors', to='terrainapp.RequestSource'),
        ),
        migrations.AddField(
            model_name='gamejoin',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='joins', to='terrainapp.RobloxUser'),
        ),
        migrations.AddField(
            model_name='find',
            name='sign',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finds', to='terrainapp.Sign'),
        ),
        migrations.AddField(
            model_name='find',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finds', to='terrainapp.RobloxUser'),
        ),
        migrations.AddField(
            model_name='failedsecurityattempt',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='failures', to='terrainapp.RequestSource'),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='requestsource',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chatmessages', to='terrainapp.RequestSource'),
        ),
        migrations.AddField(
            model_name='chatmessage',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chatmessages', to='terrainapp.RobloxUser'),
        ),
        migrations.AddField(
            model_name='bestrun',
            name='race',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bestruns', to='terrainapp.Race'),
        ),
        migrations.AddField(
            model_name='bestrun',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bestruns', to='terrainapp.RobloxUser'),
        ),
    ]
